import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import Sidebar from "./components/Sidebar";
import { SchemaProvider } from "./context/SchemaContext";
import SidebarLayout from "./components/SidebarLayout";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function LayoutWithSidebar({ children }: { children: React.ReactNode }) {
  const [sidebarOpen, setSidebarOpen] = useState(true);
  return (
    <div className="relative min-h-screen">
      {/* Sidebar */}
      <div className={`fixed top-0 left-0 h-full z-30 transition-transform duration-300 ${sidebarOpen ? "translate-x-0" : "-translate-x-full"}`}>
        <Sidebar />
      </div>
      {/* Toggle button */}
      <button
        className="fixed top-4 left-4 z-40 bg-white dark:bg-zinc-900 border border-slate-200 dark:border-zinc-800 rounded-full p-2 shadow-md hover:bg-slate-100 dark:hover:bg-zinc-800 transition-colors"
        onClick={() => setSidebarOpen((v) => !v)}
        aria-label={sidebarOpen ? "Hide sidebar" : "Show sidebar"}
      >
        {sidebarOpen ? (
          <span className="text-xl">×</span>
        ) : (
          <span className="text-xl">☰</span>
        )}
      </button>
      {/* Main content */}
      <div className={`transition-all duration-300 ${sidebarOpen ? "ml-72" : "ml-0"}`}>
        {children}
      </div>
    </div>
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <SchemaProvider>
          <SidebarLayout>{children}</SidebarLayout>
        </SchemaProvider>
      </body>
    </html>
  );
}
